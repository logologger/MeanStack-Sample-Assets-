angular.module('AssetController',[])
.controller('assetInfoCtrl',function(DService,$scope,$location,CommonDataFactory,assetService)
           {
    
    var vm=this;
    var arr1=[];
    var arr2=[];
    
      vm.others_hide=true;
    vm.AssetDataCheck="";
    // $scope.DisplayTable;
    console.log("Come to Assets "+ CommonDataFactory.getDeskNo());
    vm.DeskNumber=CommonDataFactory.getDeskNo();
    vm.LocationValue;
    vm.LocationValue=CommonDataFactory.getLocation();
   // console.log("location value"+vm.LocationFinal);
    console.log("loction value"+CommonDataFactory.getLocation());
    vm.EmployeeAsset={};
    
    $scope.assetDetails;
    
   
    //to show all the desk in the  select option
    vm.AssetType=DService.giveAllAssetType()
   .success(function(data){
    
       
       vm.AssetType=data;
       
       
        
        
   })
     

 vm.assetModelValueChange=function(){
    
       //data to sent for Post request
     console.log("Value of selected Asset Type is "+vm.assetTypeValue+" typeof "+typeof vm.assetTypeValue);
     if(vm.assetTypeValue!=""){
         
          var selectedAssetType={};
          selectedAssetType.assetTypeValue=JSON.parse(vm.assetTypeValue);
        
       
         
         
        //call the Service based on the AssetType Value selected
       var post_data={};
     post_data.AssetType=selectedAssetType.assetTypeValue.AssetType;
         
         
      console.log("After Assigning Value of selected Asset Type is "+vm.assetTypeValue+" typeof "+typeof vm.assetTypeValue); 
         
         
     DService.giveAssetModelBasedOnAssetType(post_data)
        .success(function(data){
            
         console.log("Response from giveAssetModelBasedOnAssetType API is "+JSON.stringify(data));   
             vm.AssetModel=data;
         
        })
     
    
     
        if(selectedAssetType.assetTypeValue.AssetType=="Desktop"){
            
            vm.others_hide=false;
            //call the Service with Desktop Optios(selected Option) need change in database
 }
        else{
        vm.others_hide=true;
} 
         
          }
        
    }
  
   vm.Procesoor=DService.giveAllProcessor()
   .success(function(data){
    
        vm.Processor=data;
       CommonDataFactory.setProcessor(data);
       
   })
   vm.RAM=DService.giveAllRAM()
   .success(function(data){
    
        vm.RAM=data;
        CommonDataFactory.setRAM(data);
   })
   vm.HDD=DService.giveAllHDD()
   .success(function(data){
    
        vm.HDD=data;
       CommonDataFactory.setHDD(data);
   })
   vm.OSVersion=DService.giveAllOSVersion()
   .success(function(data){
    
        vm.OSVersion=data;
       CommonDataFactory.setOSVersion(data);
   })

   vm.Accessory=DService.giveAllAccessory()
   .success(function(data){
    
        vm.Accessory=data;
        console.log("accessory"+vm.Accessory);
   })
  
    
    
     vm.submitAssetDetails=function()
     {
         //get the user id and desk id from here
  		
        //DService.saveDesk(vm.selectedDesk);
       // console.log("Asset Info"+JSON.stringify($scope.assetInfo));
      //  $scope.assetDetails=$scope.assetInfo;
         
         //First Check Whether the AssetID is already allocated to someone else and then based on this proceed from here to submit
         
         var assetId={};
         assetId.Id=vm.assetId;
         
         assetService.checkAssetID(assetId)
         .success(function(result){
             
             
             if(result.haveAsset==true){
                 
                //means it is unique
                                         vm.AssetDataCheck="";
                                         var data_to_sent={};

                                var assetInformation_post=JSON.parse(vm.assetTypeValue);

                                 console.log(assetInformation_post._id);
                                 data_to_sent.assetType=assetInformation_post._id;

                                assetInformation_post=JSON.parse(vm.assetModelValue);
                                 data_to_sent.assetModel=assetInformation_post._id;


                                 data_to_sent.assetId=vm.assetId;//Sending the Asset ID

                                 if(vm.processorValue){
                                 assetInformation_post=JSON.parse(vm.processorValue);
                                 data_to_sent.processorValue=assetInformation_post._id;
                                     }

                                 if(vm.ramValue){
                                 assetInformation_post=JSON.parse(vm.ramValue);
                                 data_to_sent.ramValue=assetInformation_post._id;
                                 }
                                 if(vm.hddValue){
                                 assetInformation_post=JSON.parse(vm.hddValue);
                                 data_to_sent.hddValue=assetInformation_post._id;
                                 }
                                 if(vm.osversionValue){
                                  assetInformation_post=JSON.parse(vm.osversionValue);
                                 data_to_sent.osversionValue=assetInformation_post._id;
                                 }
                 
                 console.log("Accessory "+JSON.stringify(vm.Accessory_checked));
                 console.log("accessory"+JSON.stringify(vm.Accessory));
                
                 var Accessory_obj=[];
                 var index_accessory=0;
                  for(i in vm.Accessory_checked)
                  {
                      console.log(vm.Accessory[i]._id)
                      Accessory_obj[index_accessory++]=vm.Accessory[i]._id;
                  }
                 index_accessory=0;
                 console.log("Object "+JSON.stringify(Accessory_obj));
                 data_to_sent.Accessory=Accessory_obj;
                 
                 
                                 console.log(data_to_sent);

                                assetService.assetSave(data_to_sent).
                                success(function(data){

                                    console.log(data);
                                    $location.path('/click');


                                });

                 
             }
             else{
                 
                 //means it is not unique
                 
                 vm.AssetDataCheck="Asset is already Taken by Other User.";
             }
             
         });
         
         

        

        //$location.path('/click');
     }
    
    // vm.checkDeskDetails=function(){
        
    //    console.log(DService.checkDesk());
    // }
     // assetService.assetDisplay().success(function(data){
     //        console.log("Displaydata"+JSON.stringify(data));
     //        $scope.DisplayTable= data;


     //     });

    vm.AssetTable = function() {

        console.log("path changed");
       $location.path("/click");

    }
    
    
})
